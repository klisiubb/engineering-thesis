generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  VOLUNTEER
  LECTURER
}

model User {
  Id                  String    @id @default(uuid())
  externalId          String    @unique
  email               String    @unique
  firstName           String?
  lastName            String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  picture             String
  role                Role      @default(USER)
  points              Int       @default(0)
  isPresentAtEvent    Boolean   @default(false)
  isWinner            Boolean   @default(false)
  Reward              Reward[]  @relation(name: "RewardWinners")
  workshopToAttend    Workshop? @relation(name: "WorkshopAttenders", fields: [workshopToAttendId], references: [id])
  workshopToAttendId  String?
  WorkshopToLecture   Workshop? @relation(name: "WorkshopLecturers", fields: [workshopToLectureId], references: [id])
  workshopToLectureId String?
  QrCode              QrCode[]  @relation(name: "ScannedBy")
}

model Workshop {
  id           String   @id @default(uuid())
  topic        String   @unique()
  description  String?
  maxAttenders Int      @default(9999)
  room         String?
  startDate    DateTime @default(now())
  endDate      DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isPublished  Boolean  @default(false)
  qrCode       QrCode?  @relation(name: "WorkshopQRCode", fields: [qrCodeId], references: [id])
  qrCodeId     String?  @unique
  attenders    User[]   @relation(name: "WorkshopAttenders")
  lecturers    User[]   @relation(name: "WorkshopLecturers")
  isPublic     Boolean  @default(true)
}

model Reward {
  id          String   @id @default(uuid())
  name        String   @unique()
  description String?
  quantity    Int      @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublished Boolean  @default(false)
  winners     User[]   @relation(name: "RewardWinners")
}

model QrCode {
  id          String    @id @default(uuid())
  name        String    @unique
  value       Int?
  base64      String?
  maxUses     Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isPublished Boolean   @default(false)
  Workshop    Workshop? @relation(name: "WorkshopQRCode")
  workshopId  String?
  scannedBy   User[]    @relation(name: "ScannedBy")
}
